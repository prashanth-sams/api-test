{
	"info": {
		"_postman_id": "3ee9264f-e4d1-4ecc-94ca-f418e29454a1",
		"name": "Interview",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "candidate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"validate response status and response array count\", () => {",
							"    pm.response.to.have.status(200);",
							"    pm.expect(pm.response.json().length).to.eql(50);",
							"});",
							"",
							"pm.test(\"validate response JSON schema\", () => {",
							"    const schema = {",
							"        \"definitions\": {},",
							"        \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
							"        \"type\": \"array\",",
							"        \"items\": {",
							"            \"type\": \"object\",",
							"            \"required\": [ \"plateNo\", \"driverName\", \"lat\", \"lng\", \"location\", \"lastUpdated\" ],",
							"            \"properties\": {",
							"                \"plateNo\":  { ",
							"                    \"uniqueItems\": true,",
							"                    \"enum\": [ \"X 19599\", \"O 41291\", \"I 93053\", \"P 33048\", \"P 33331\", \"I 66897\", \"C 31590\", \"Q 89697\", \"X 54992\", \"I 53457\",",
							"                            \"P 86578\", \"B 37262\", \"C 74914\", \"V 59968\", \"S 49276\", \"L 19034\", \"I 42046\", \"H 83296\", \"A 66081\", \"T 50237\", \"L 92214\",",
							"                            \"F 43764\", \"R 24994\", \"A 24403\", \"A 59618\", \"C 35447\", \"J 95558\", \"Y 46460\", \"D 26771\", \"G 76076\", \"A 29825\", ",
							"                            \"X 70109\", \"N 43426\", \"X 42412\", \"N 62746\", \"M 21753\", \"R 95145\", \"D 58760\", \"T 36944\", \"N 92677\", \"A 28636\",",
							"                            \"W 69506\", \"N 87111\", \"O 19439\", \"Y 27000\", \"N 18898\", \"J 55060\", \"V 23011\", \"X 94517\", \"N 26414\" ] },",
							"                \"driverName\": { ",
							"                    \"type\": \"string\", \"pattern\": \"\\\\S+\", \"minLength\": 5, \"maxLength\": 30,",
							"                    \"enum\": [ \"Wyatt Liam\", \"William Noah\", \"Thomas William\", \"Theodore James\", \"Sebastian Oliver\", \"Samuel Benjamin\", \"Ryan Elijah\", \"Owen Lucas\", \"Oliver Mason\", \"Noah Logan\", \"Nathan Alexander\", \"Michael Ethan\", \"Matthew Jacob\", \"Mateo Michael\", \"Mason Daniel\", \"Luke Henry\", \"Lucas Jackson \", \"Logan Sebastian\", \"Lincoln Aiden\", \"Liam Matthew\", \"Levi Samuel\", \"Leo David\", \"Julian Joseph\", \"Joshua Carter\", \"Joseph Owen\", \"John Wyatt\", \"Jayden John\", \"Jaxon Jack\", \"James Luke\", \"Jacob Jayden\", \"Jackson Dylan\", \"Jack Grayson\", \"Isaac Levi\", \"Henry Isaac\", \"Grayson Gabriel\", \"Gabriel Julian\", \"Ethan Mateo\", \"Elijah Anthony\", \"Dylan Jaxon\", \"David Lincoln\", \"Daniel Joshua\", \"Christopher Christopher\", \"Carter Andrew\", \"Caleb Theodore\", \"Benjamin Caleb\", \"Asher Ryan\", \"Anthony Asher\", \"Andrew Nathan\", \"Alexander Thomas\", \"Aiden Leo\" ] },",
							"                \"lat\": { \"type\": \"number\" },",
							"                \"lng\": { \"type\": \"number\" },",
							"                \"location\": { \"type\": \"string\" },",
							"                \"imageURL\": { \"type\": \"string\" },",
							"                \"lastUpdated\": {  \"type\": \"string\" }",
							"            }",
							"        }",
							"    };",
							"",
							"    pm.response.to.have.jsonSchema(schema);",
							"    ",
							"    const jsonData = pm.response.json();",
							"    const latitude = [ 25.357119, 24.058611, 25.259933, 24.863075, 25.087942, 25.21768, 25.18561, 25.089575, 24.487249, 25.089718, 25.088907, 25.199514, 25.197525, 24.418612, 24.421555, 25.266666, 25.800694, 24.184843, 25.322327, 24.466667, 24.2075, 25.276987, 25.392134, 25.0963, 25.068422, 25.068983, 25.088713, 25.173683, 25.069872, 25.184242, 24.332018, 25.134415, 25.22053, 25.308014, 25.267906, 25.11894, 25.0939016825397, 25.0988686188331, 25.1038355551266, 25.10880249142, 25.1137694277134, 25.1187363640069, 24.1237033003003, 24.418612, 24.421555, 25.266666, 24.800694, 24.184843, 24.322327, 24.466667 ];",
							"    const longitude = [ 55.391068, 55.7775, 55.322769, 55.052059, 55.147499, 55.283546, 55.258133, 55.147846, 54.357464, 55.150646, 55.148571, 55.277397, 55.274288, 54.434723, 54.576599, 55.316666, 55.9762, 54.499901, 55.513641, 54.366669, 55.74472, 55.296249, 55.439693, 55.166893, 55.142982, 55.141205, 55.146679, 55.404945, 55.172516, 55.27243, 54.534374, 55.245258, 55.419472, 55.411171, 55.323158, 55.183552, 55.3175031507937, 55.3297002597154, 55.3418973686371, 55.3540944775588, 55.3662915864806, 55.3784886954023, 54.434723, 54.576599, 55.316666, 55.9762, 54.899901, 55.513641, 54.366669, 55.74472 ];",
							"",
							"    jsonData.map((item, index) => {",
							"        pm.expect(item.lat).to.not.be.null;",
							"        pm.expect(item.lat).to.eql(latitude[index]);",
							"        pm.expect(item.lat).to.be.a('number').and.match(/^[+-]?([0-9]*[.])?[0-9]+$/);",
							"        ",
							"        pm.expect(item.lng).to.not.be.null;",
							"        pm.expect(item.lng).to.be.a('number').and.match(/^[+-]?([0-9]*[.])?[0-9]+$/);",
							"        pm.expect(item.lng).to.eql(longitude[index]);",
							"    });",
							"",
							"    const location = [ \"Rolla, Sharjah, the UAE\", \"Jebel Hafeet Mountain Road, UAE\", \"Al Maktoum Rd, Dubai, United Arab Emirates\", \"Al Marai Road, Dubai, United Arab Emirates\", \"The Marina Torch, Dubai, United Arab Emirates\", \"Emirates Office Tower, Dubai, UAE\", \"JW Marriott Marquis Dubai, Busines Bay, Dubai, UAE\", \"Elite Residence, Dubai, United Arab Emirates\", \"World Trade Center Abu Dhabi, Abu Dhabi, United Arab Emirates\", \"23 Marina, Dubai, United Arab Emirates\", \"Marina 101, Dubai Marina, Dubai, United Arab Emirates\", \"Dubai Mall, Dubai, United Arab Emirates\", \"Burj Khalifa, Dubai, United Arab Emirates\", \"Capital Gate, Abu Dhabi, United Arab Emirates\", \"Khalifa City, Abu Dhabi, United Arab Emirates\", \"Deira, Dubai, United Arab Emirates\", \"Ras Al-Khaimah, Ras al Khaimah, United Arab Emirates\", \"Al Dhafra, Abu Dhabi, United Arab Emirates\", \"Sharjah, United Arab Emirates\", \"Abu Dhabi, United Arab Emirates\", \"Al Ain, United Arab Emirates\", \"Dubai, United Arab Emirates\", \"Grand Office Tower Rashidiya, Ajman, the UAE\", \"The Onyx Tower 2, Dubai City, Dubai, the UAE\", \"AG Tower, Dubai, United Arab Emirates\", \"Almas Tower, Dubai, United Arab Emirates\", \"Princess Tower, Dubai Marina, Dubai, United Arab Emirates\", \"England Cluster, International City, Dubai, UAE\", \"Emirates Hills, Dubai, United Arab Emirates\", \"Business Bay, Dubai, United Arab Emirates\", \"Mussafah Community, Abu Dhabi, United Arab Emirates\", \"Al Quoz Industrial Area 2, Dubai, United Arab Emirates\", \"Mirdif, Dubai, UAE\", \"Industrial Area 3 - Sharjah - United Arab Emirates\", \"Al Muraqqabat, Dubai, United Arab Emirates\", \"Al Sufouh, Dubai, United Arab Emirates\", \"Rolla, Sharjah, the UAE\", \"Jebel Hafeet Mountain Road, UAE\", \"Al Maktoum Rd, Dubai, United Arab Emirates\", \"Al Marai Road, Dubai, United Arab Emirates\", \"The Marina Torch, Dubai, United Arab Emirates\", \"Emirates Office Tower, Dubai, UAE\", \"JW Marriott Marquis Dubai, Busines Bay, Dubai, UAE\", \"Elite Residence, Dubai, United Arab Emirates\", \"World Trade Center Abu Dhabi, Abu Dhabi, United Arab Emirates\", \"24 Marina, Dubai, United Arab Emirates\", \"Marina 101, Dubai Marina, Dubai, United Arab Emirates\", \"Rolla, Sharjah, the UAE\", \"Jebel Hafeet Mountain Road, UAE\", \"Al Maktoum Rd, Dubai, United Arab Emirates\" ];",
							"    ",
							"    let len = 0;",
							"    _.each(jsonData, (item) => {",
							"        pm.expect(item.location).to.include(location[len]);",
							"        len += 1;",
							"    });",
							"",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://interviewtestapi.azurewebsites.net/api/candidate",
					"protocol": "https",
					"host": [
						"interviewtestapi",
						"azurewebsites",
						"net"
					],
					"path": [
						"api",
						"candidate"
					]
				}
			},
			"response": []
		}
	]
}